CREATE TABLE "PATCH_PREREQS"(
  "PATCH_PREREQ_ID"   NUMBER
  ,"PATCH_NAME"        VARCHAR2(100)
  ,"PREREQ_PATCH"      VARCHAR2(100)
  ,"CREATED_BY"        VARCHAR2(255)
  ,"CREATED_ON"        DATE DEFAULT SYSDATE
  ,"LAST_UPDATED_BY"   VARCHAR2(255)
  ,"LAST_UPDATED_ON"   DATE DEFAULT SYSDATE
);


--INDEXES

  CREATE UNIQUE INDEX "PATCH_PREREQS_PK" ON "PATCH_PREREQS" ("PATCH_PREREQ_ID") 
  ;


  CREATE UNIQUE INDEX "PATCH_PREREQS_UK1" ON "PATCH_PREREQS" ("PATCH_NAME", "PREREQ_PATCH") 
  ;



--CONSTRAINTS

  ALTER TABLE "PATCH_PREREQS" ADD CONSTRAINT "PATCH_PREREQS_PK" PRIMARY KEY ("PATCH_PREREQ_ID")
  USING INDEX  ENABLE;
  ALTER TABLE "PATCH_PREREQS" ADD CONSTRAINT "PATCH_PREREQS_UK1" UNIQUE ("PATCH_NAME", "PREREQ_PATCH")
  USING INDEX  ENABLE;



--REFERENTIAL CONSTRAINTS


--COMMENTS


--TRIGGERS

  CREATE OR REPLACE EDITIONABLE TRIGGER "PATCH_PREREQS_AUD" 
	before insert or update or delete on PATCH_PREREQS
	for each row
declare
	l_user varchar2(200) := nvl(v('app_user'), user);
	l_date date := sysdate;
	l_action varchar2(1);
begin
	-- this is a generated trigger, DO NOT make any changes to it directly, or they will be lost
	--   to make changes please edit app_config.create_audit_scripts


	if inserting then
		-- if primary is null, then populate it from the guid sequence
		if :new.PATCH_PREREQ_ID is null then
			:new.PATCH_PREREQ_ID := to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX');
		end if;

		-- populate creation audit fields
		:new.CREATED_BY := l_user;
		:new.CREATED_ON := l_date;
	end if;

	if updating then
		-- ensure created audit fields don't change
		:new.CREATED_BY := :old.CREATED_BY;
		:new.CREATED_ON := :old.CREATED_ON;
	end if;

	if inserting or updating then
		-- populate last updated audit fields
		:new.LAST_UPDATED_BY := l_user;
		:new.LAST_UPDATED_ON := l_date;
	end if;


end;
/
ALTER TRIGGER "PATCH_PREREQS_AUD" ENABLE;


--GRANTS


--SYNONYMS
